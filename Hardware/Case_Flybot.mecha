post_radius = 1;
post_height = 12;
wall_height = 20;
x_pad = 1.7;
y_pad = 2.3;
x_post_sep = 44.5 + 2.5;
y_post_sep = 21.8 + 2.5;
thickness = 1.5;
y_size = 40.3;
x_size = 53;
_m_config(l="mm", m="g", up="Z");
if (false) {
    translate([0, -y_post_sep / 2 + y_size / 2 - 1.3 - y_pad, post_height / 2])
    cube(size=[x_size, y_size, 1.5], center=true);
}
if (false) {
    translate([0, 0, post_height / 2 + 5])
    cube(size=[x_size, 28.5, 1.5], center=true);
}
union() {
    difference() {
        translate([0, -y_post_sep / 2 + y_size / 2 - 1.3 - y_pad - 0.2, 0])
        Box(thickness=thickness, x_size=x_size + 0.4, y_size=y_size + 0.4, z_size=wall_height);
        translate([x_pad + thickness + 10, 0, post_height / 4 + thickness])
        cube(size=[x_size, 13, post_height / 2], center=true);
    }
    translate([x_post_sep / 2, -y_post_sep / 2, thickness * 0.9])
    Post();
    translate([x_post_sep / 2, y_post_sep / 2, thickness * 0.9])
    Post();
    translate([-x_post_sep / 2, -y_post_sep / 2, thickness * 0.9])
    Post();
    translate([-x_post_sep / 2, y_post_sep / 2, thickness * 0.9])
    Post();
}
module Box(thickness=2, x_size=20, y_size=40, z_size=10) {
    union() {
        translate([-x_size / 2 - thickness / 2, 0, z_size / 2])
        cube(size=[thickness, y_size, z_size], center=true);
        translate([x_size / 2 + thickness / 2, 0, z_size / 2])
        cube(size=[thickness, y_size, z_size], center=true);
        translate([0, y_size / 2 + thickness / 2, z_size / 2])
        cube(size=[x_size, thickness, z_size], center=true);
        translate([0, -y_size / 2 - thickness / 2, z_size / 2])
        cube(size=[x_size, thickness, z_size], center=true);
        translate([0, 0, thickness / 2])
        cube(size=[x_size, y_size, thickness], center=true);
        translate([-x_size / 2, -y_size / 2, 0])
        Corner(radius=thickness, height=z_size);
        translate([-x_size / 2, y_size / 2, 0])
        rotate([0, 0, -90])
        Corner(radius=thickness, height=z_size);
        translate([x_size / 2, y_size / 2, 0])
        rotate([0, 0, 180])
        Corner(radius=thickness, height=z_size);
        translate([x_size / 2, -y_size / 2, 0])
        rotate([0, 0, 90])
        Corner(radius=thickness, height=z_size);
    }
}
module Post() {
    translate([0, 0, post_height / 2])
    cylinder(h=post_height, r1=post_radius, r2=post_radius * 0.9, center=true, $fa=12, $fs=0.25);
    translate([0, 0, 2.5 / 2])
    cylinder(h=2.5, r1=post_radius * 2, r2=post_radius * 0.9, center=true, $fa=12, $fs=0.25);
}
module Corner(radius=2, height=10) {
    difference() {
        translate([0, 0, height / 2])
        cylinder(h=height, r1=radius, r2=radius, center=true, $fs=0.5);
        translate([radius * 2, 0, height / 2])
        cube(size=[radius * 4, radius * 4, height * 2], center=true);
        translate([0, radius * 2, height / 2])
        cube(size=[radius * 4, radius * 4, height * 2], center=true);
    }
}
